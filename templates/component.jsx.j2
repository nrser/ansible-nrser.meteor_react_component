// standard imports
import { Meteor } from 'meteor/meteor';
import { _ } from 'meteor/underscore';
import { check, match, Match } from 'meteor/nrser:util';
import * as Util from 'meteor/nrser:util';

// react imports
import React, { PropTypes } from 'react';
import ReactDOM from 'react-dom';
import { BaseComponent } from '/imports/ui/components/lib/BaseComponent.jsx';
{% if component_data -%}
import { ReactMeteorData } from 'meteor/react-meteor-data';
import reactMixin from 'react-mixin';  
{% endif %}

{% if component_blaze -%}
// blaze imports
import { Template } from 'meteor/templating';
import './{{ component_class }}.html';
{% endif %}

// other package imports

// project imports
import * as ui from '/imports/ui';
import { } from '/imports/collections';

const log = Util.logger('{{ component_logger_name }}');

export class {{ component_class }} extends BaseComponent {
  static propTypes = {
    
  }; // propTypes
  
  static defaultProps = {
    
  }; // defaultProps
  
  constructor(props) {
    super(props);
  } // constructor()
  
  {% if component_data -%}
  getMeteorData() {
    return {
    };
  } // getMeteorData()
  {% endif %}
  
  // helper methods
  // ==============
  
  // event handlers
  // ==============
  
  // render methods
  // ==============
  
  render() {
    return (
      <{{ component_root }} className="{{ component_css_class }}">
      </{{ component_root }}>
    );
  } // render()
  
  // hook methods
  // ===========
  
} // {{ component_class }}

{% if component_data -%}
// mixin that calls `component.getMeteorData()`
reactMixin({{ component_class}}.prototype, ReactMeteorData);
{% endif %}

{% if component_blaze -%}
// register component globally to be used by Blaze
Template.registerHelper('{{ component_class }}', () => {{ component_class }});
{% endif %}